{"version":3,"sources":["components/Navbar.js","components/FormText.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","style","height","width","backgroundColor","border","borderRadius","FormText","useState","text","setText","color","heading","background","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","italic","document","getElementById","fontStyle","bold","fontWeight","split","join","select","navigator","clipboard","writeText","length","Math","floor","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","setAlert","setBackground","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ec658cf1.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                        {props.title}\r\n                    </a>\r\n                    {/* <Link className=\"navbar-brand\" to=\"/\">\r\n                        {props.title}\r\n                    </Link> */}\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#navbarSupportedContent\"\r\n                        aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"> </span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                                    Home\r\n                                </a>\r\n                                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                                    Home\r\n                                </Link> */}\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n\r\n                                {/* <Link className=\"nav-link\" to=\"/about\">\r\n                                    {props.aboutText}\r\n                                </Link> */}\r\n                            </li>\r\n                        </ul>\r\n                        {/* <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                                Search\r\n                            </button>\r\n                        </form> */}\r\n                        {/* <div className=\"form-check form-switch\">\r\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className={`form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                        </div> */}\r\n                        <div className=''>\r\n                            <p className={`text-${props.mode === 'light' ? 'dark' : 'light'} mx-2 mt-1 mb-0 d-inline-block`}>\r\n                                Enable Dark Mode\r\n                            </p>\r\n                            <button className='mx-1 pb-1'\r\n                                onClick={props.toggleMode}\r\n                                style={{\r\n                                    height: '25px', width: '25px', backgroundColor: '#fff',\r\n                                    border: `1px solid ${props.mode === 'light' ? 'grey' : 'white'}`, borderRadius: '50%'\r\n                                }}>\r\n                            </button>\r\n                            <button className='mx-1 pb-1'\r\n                                onClick={props.toggleMode}\r\n                                style={{\r\n                                    height: '25px', width: '25px', backgroundColor: '#111122',\r\n                                    border: '1px solid white', borderRadius: '50%'\r\n                                }}>\r\n                            </button>\r\n                            <button className='mx-1 pb-1'\r\n                                onClick={props.toggleMode}\r\n                                style={{\r\n                                    height: '25px', width: '25px', backgroundColor: '#331122',\r\n                                    border: '1px solid white', borderRadius: '50%'\r\n                                }}>\r\n                            </button>\r\n                            <button className='mx-1 pb-1'\r\n                                onClick={props.toggleMode}\r\n                                style={{\r\n                                    height: '25px', width: '25px', backgroundColor: '#114422',\r\n                                    border: '1px solid white', borderRadius: '50%'\r\n                                }}>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\n\r\n// default values if you don't set any values \r\nNavbar.defaultProps = {\r\n    title: 'Set Title Here',\r\n    aboutText: 'Set Title Here'\r\n\r\n}","import React, {useState} from 'react'\r\n\r\n\r\nexport default function FormText(props) {\r\n    const [text, setText] = useState(\"\")\r\n\r\n\r\n    const handleUpCase = () => {\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Upper Case.\", \"success\")\r\n    }\r\n    const handleLoCase = () => {\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lower Case.\", \"success\")\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        let text = document.getElementById('mybox')\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert(\"Text copied to clipboard.\", \"success\")\r\n    }\r\n\r\n\r\n\r\n    const handleBold = () => {\r\n\r\n        let textBox = document.getElementById('mybox')\r\n        let bold = textBox.style;\r\n        if (bold.fontWeight === '') {\r\n            bold.fontWeight = 'bold'\r\n            props.showAlert(\"Text is converted to bold.\", \"success\")\r\n        } else {\r\n            bold.fontWeight = ''\r\n        }\r\n    }\r\n\r\n    const handleItalic = () => {\r\n\r\n        let textBox = document.getElementById('mybox')\r\n        let italic = textBox.style;\r\n        if (italic.fontStyle === '') {\r\n            italic.fontStyle = 'italic'\r\n            props.showAlert(\"Text is converted to italic.\", \"success\")\r\n        } else {\r\n            italic.fontStyle = ''\r\n        }\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces have been removed.\", \"success\")\r\n    }\r\n\r\n\r\n    const handleClearCase = () => {\r\n        let newText = \"\";\r\n        setText(newText)\r\n        props.showAlert(\"Text has been cleared.\", \"success\")\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode === 'light' ? 'black' : 'white'}}>\r\n                <div className=\"mb-3\">\r\n                    <h1 className=\"mb-3\">{props.heading}</h1>\r\n                    <br />\r\n                    <h5>Enter text here</h5>\r\n                    <textarea className=\"form-control\" style={{background: props.mode === 'light' ? 'white' : '#191919', color: props.mode === 'light' ? 'black' : 'white'}} id=\"mybox\" value={text} onChange={handleOnChange} rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleUpCase}>UpperCase</button>\r\n\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleLoCase}>LowerCase</button>\r\n\r\n\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleItalic}>Italic Text</button>\r\n\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleBold}>Bold Text</button>\r\n\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}> Remove Extra Spaces\r\n                </button>\r\n\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleClearCase}> Clear Text </button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode === 'light' ? 'black' : 'white'}}>\r\n                <h2>Your text summary</h2>\r\n                <p>{(text.split(\" \").length - 1)} words and {text.length} characters</p>\r\n                <p>{Math.floor((0.008 * text.split(\" \").length - 0.008) % 60)} minutes {Math.floor(((0.008 * text.split(\" \").length - 0.008) * 60) % 60)} seconds to read</p>\r\n                <h2>Preview</h2>\r\n                <p className='p-2' style={{\r\n                    backgroundColor: props.mode === 'light' ? 'white' : '#191919',\r\n                    border: `2px solid ${props.mode === 'light' ? 'white' : 'white'}`,\r\n                    borderRadius: `5px`\r\n                }}>\r\n                    {text.length > 0 ? text : \"Enter text in above box to preview here\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    let capitalize = (word) => {\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        props.alert &&\r\n        <>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}!</strong> {props.alert.msg}\r\n                {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport Navbar from './components/Navbar'\nimport FormText from './components/FormText'\n// import About from \"./components/About\";\nimport React, {useState} from 'react'\nimport Alert from \"./components/Alert\";\n// import {\n// \tBrowserRouter as Router,\n// \tSwitch,\n// \tRoute\n// } from \"react-router-dom\";\n\nfunction App() {\n\tconst [mode, setMode] = useState('light')\n\n\tconst [alert, setAlert] = useState(null)\n\tconst [background, setBackground] = useState(null)\n\tconst toggleMode = () => {\n\t\tif (mode === 'light') {\n\t\t\tsetMode(\"dark\")\n\t\t\tdocument.body.style.background = '#111122'\n\t\t\tshowAlert(\"Dark mode has been enabled\", \"success\")\n\t\t} else {\n\t\t\tsetMode(\"light\")\n\t\t\tdocument.body.style.background = 'white'\n\t\t\tshowAlert(\"Light mode has been enabled\", \"success\")\n\t\t}\n\t}\n\n\tconst backgroundColor = (color) => {\n\t\tsetBackground({\n\t\t\tcolor: color\n\t\t})\n\t}\n\n\tconst showAlert = (message, type) => {\n\t\tsetAlert({\n\t\t\tmsg: message,\n\t\t\ttype: type\n\t\t})\n\t\tsetTimeout(() => {\n\t\t\tsetAlert(null)\n\t\t}, 2000);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{/* <Router> */}\n\t\t\t<Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} background={background} backgroundColor={backgroundColor} toggleMode={toggleMode} />\n\t\t\t<Alert alert={alert} />\n\t\t\t<div className=\"container my-3\">\n\t\t\t\t{/* <Switch> */}\n\t\t\t\t{/* <Route exact path=\"/about\"> */}\n\t\t\t\t{/* <About /> */}\n\t\t\t\t{/* </Route> */}\n\t\t\t\t{/* <Route exact path=\"/\"> */}\n\t\t\t\t<FormText heading=\"Text Case Converter\" mode={mode} background={background} backgroundColor={backgroundColor} showAlert={showAlert} />\n\t\t\t\t{/* </Route> */}\n\t\t\t\t{/* </Switch> */}\n\t\t\t</div>\n\t\t\t{/* </Router> */}\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}